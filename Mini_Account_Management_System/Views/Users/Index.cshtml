@model IEnumerable<Mini_Account_Management_System.Models.User>
@{
    ViewData["Title"] = "Users";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">User Management</h4>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add New User
                    </a>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Username</th>
                                    <th>Password</th>
                                    <th>Created Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <span class="password-masked" id="password-@item.Id">
                                                    @(new string('*', Math.Min(item.Password.Length, 8)))
                                                </span>
                                                <span class="password-visible d-none" id="password-visible-@item.Id">
                                                    @Html.DisplayFor(modelItem => item.Password)
                                                </span>
                                                <button type="button" class="btn btn-sm btn-link text-muted ms-2" onclick="togglePasswordVisibility(@item.Id)" title="Show/Hide Password">
                                                    <i class="fas fa-eye" id="eye-icon-@item.Id"></i>
                                                </button>
                                            </div>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this user?')">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No users found</h5>
                            <p class="text-muted">Click "Add New User" to create your first user.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePasswordVisibility(userId) {
        const maskedElement = document.getElementById(`password-${userId}`);
        const visibleElement = document.getElementById(`password-visible-${userId}`);
        const eyeIcon = document.getElementById(`eye-icon-${userId}`);

        if (maskedElement.classList.contains('d-none')) {
            // Currently showing password, hide it
            maskedElement.classList.remove('d-none');
            visibleElement.classList.add('d-none');
            eyeIcon.classList.remove('fa-eye-slash');
            eyeIcon.classList.add('fa-eye');
        } else {
            // Currently hiding password, show it
            maskedElement.classList.add('d-none');
            visibleElement.classList.remove('d-none');
            eyeIcon.classList.remove('fa-eye');
            eyeIcon.classList.add('fa-eye-slash');
        }
    }


     // Toast display logic
            window.addEventListener('DOMContentLoaded', () => {
            const successMessage = @Html.Raw(Json.Serialize(TempData["SuccessMessage"]));
            if (successMessage) {
                const toastEl = document.getElementById('toastMessage');
                const toastBody = document.getElementById('toastBody');
                toastBody.textContent = successMessage;
                const bsToast = new bootstrap.Toast(toastEl);
                bsToast.show();
            }
        });
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>