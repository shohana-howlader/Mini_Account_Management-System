@model IEnumerable<Mini_Account_Management_System.Models.Screen>

@{
    ViewData["Title"] = "Screen Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-desktop"></i> Screen Management
                    </h3>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add New Screen
                    </a>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ScreenName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.URL)
                                    </th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@Html.DisplayFor(modelItem => item.ScreenName)</strong>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.URL))
                                                {
                                                    <a href="@item.URL" target="_blank" class="text-decoration-none">
                                                        @Html.DisplayFor(modelItem => item.URL)
                                                        <i class="fas fa-external-link-alt ms-1"></i>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No URL</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this user?')">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center text-muted py-4">
                                            <i class="fas fa-inbox fa-2x mb-2"></i>
                                            <br>
                                            No screens found. <a asp-action="Create">Create the first screen</a>.
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // // Auto-hide alerts after 5 seconds
        // setTimeout(function () {
        //     $('.alert').alert('close');
        // }, 5000);

         
        document.addEventListener('DOMContentLoaded', function () {
            // View Details button click handler
            document.querySelectorAll('[title="View Details"]').forEach(function (btn) {
                btn.addEventListener('click', function (e) {
                    // Optional: Custom logic before navigating
                    console.log('Viewing details for user ID:', getUserIdFromHref(btn.href));
                    // Default navigation behavior continues
                });
            });

            // Edit button click handler
            document.querySelectorAll('[title="Edit"]').forEach(function (btn) {
                btn.addEventListener('click', function (e) {
                    console.log('Editing user ID:', getUserIdFromHref(btn.href));
                });
            });

            // Delete button click handler
            document.querySelectorAll('[title="Delete"]').forEach(function (btn) {
                btn.addEventListener('click', function (e) {
                    const confirmed = confirm('Are you sure you want to delete this user?');
                    if (!confirmed) {
                        e.preventDefault(); // Cancel navigation if user cancels
                    } else {
                        console.log('Deleting user ID:', getUserIdFromHref(btn.href));
                    }
                });
            });

            // Utility to extract user ID from href (assumes it's the last part of the URL)
            function getUserIdFromHref(href) {
                return href.substring(href.lastIndexOf('/') + 1);
            }
        });
   

    </script>
}