@model IEnumerable<Mini_Account_Management_System.Models.ViewModel.UserRolePermissionViewModel>

@{
    ViewData["Title"] = "User Role Permissions";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">
                        <i class="fas fa-shield-alt"></i> User Role Permissions
                    </h3>
                    <div class="btn-group">
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Add New Permission
                        </a>
                        <a href="@Url.Action("Dashboard")" class="btn btn-info">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["Success"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    @if (TempData["Warning"] != null)
                    {
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle"></i> @TempData["Warning"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover" id="permissionsTable">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>ID</th>
                                        <th>User</th>
                                        <th>Role</th>
                                        <th>Screen</th>
                                        <th class="text-center">
                                            <i class="fas fa-eye" title="Read"></i>
                                            Read
                                        </th>
                                        <th class="text-center">
                                            <i class="fas fa-pen" title="Write"></i>
                                            Write
                                        </th>
                                        <th class="text-center">
                                            <i class="fas fa-edit" title="Edit"></i>
                                            Edit
                                        </th>
                                        <th class="text-center">
                                            <i class="fas fa-trash" title="Delete"></i>
                                            Delete
                                        </th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@item.Id</strong>
                                            </td>
                                            <td>
                                                <strong>@item.UserName</strong>
                                                <br>
                                                <small class="text-muted">ID: @item.UserId</small>
                                            </td>
                                            <td>
                                                <span class="badge badge-secondary">@item.RoleName</span>
                                                <br>
                                                <small class="text-muted">ID: @item.RoleId</small>
                                            </td>
                                            <td>
                                                <strong>@item.ScreenName</strong>
                                                @if (!string.IsNullOrEmpty(item.URL))
                                                {
                                                    <br>
                                                    <small class="text-muted">@item.URL</small>
                                                }
                                                <br>
                                                <small class="text-muted">ID: @item.ScreenId</small>
                                            </td>
                                            <td class="text-center">
                                                @if (item.CanRead)
                                                {
                                                    <span class="badge badge-success">
                                                        <i class="fas fa-check"></i> Yes
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">
                                                        <i class="fas fa-times"></i> No
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                @if (item.CanWrite)
                                                {
                                                    <span class="badge badge-success">
                                                        <i class="fas fa-check"></i> Yes
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">
                                                        <i class="fas fa-times"></i> No
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                @if (item.CanEdit)
                                                {
                                                    <span class="badge badge-success">
                                                        <i class="fas fa-check"></i> Yes
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">
                                                        <i class="fas fa-times"></i> No
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                @if (item.CanDelete)
                                                {
                                                    <span class="badge badge-success">
                                                        <i class="fas fa-check"></i> Yes
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">
                                                        <i class="fas fa-times"></i> No
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", new { id = item.Id })"
                                                       class="btn btn-sm btn-outline-info" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { id = item.Id })"
                                                       class="btn btn-sm btn-outline-warning" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a href="#" onclick="confirmDelete(@item.Id, '@item.UserName', '@item.RoleName')"
                                                       class="btn btn-sm btn-outline-danger" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shield-alt fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No Permissions Found</h4>
                            <p class="text-muted">Start by creating user role permissions.</p>
                            <a href="@Url.Action("Create")" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Add First Permission
                            </a>
                        </div>
                    }
                </div>

                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                Total Permissions: <strong>@(Model?.Count() ?? 0)</strong>
                            </small>
                        </div>
                        <div class="col-md-6 text-right">
                            @if (Model != null && Model.Any())
                            {
                                <div class="btn-group btn-group-sm">
                                    <button type="button" class="btn btn-outline-secondary active" onclick="filterByPermission('all')">
                                        All
                                    </button>
                                    <button type="button" class="btn btn-outline-success" onclick="filterByPermission('read')">
                                        Can Read
                                    </button>
                                    <button type="button" class="btn btn-outline-primary" onclick="filterByPermission('write')">
                                        Can Write
                                    </button>
                                    <button type="button" class="btn btn-outline-warning" onclick="filterByPermission('edit')">
                                        Can Edit
                                    </button>
                                    <button type="button" class="btn btn-outline-danger" onclick="filterByPermission('delete')">
                                        Can Delete
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<button type="submit" class="btn btn-danger" id="confirmDeleteBtn">
    <i class="fas fa-trash"></i> Delete Permission
</button>

@section Scripts {
    <script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.24/js/dataTables.bootstrap4.min.js"></script>

    <script>
        $(document).ready(function () {
            var hasData = @Html.Raw((Model != null && Model.Any()).ToString().ToLower());

            if (hasData) {
                $('#permissionsTable').DataTable({
                    "responsive": true,
                    "lengthChange": true,
                    "autoWidth": false,
                    "pageLength": 25,
                    "order": [[0, "desc"]], // Order by ID descending to show newest first
                    "columnDefs": [
                        { "orderable": false, "targets": 8 }, // Disable sorting on Actions column
                        { "className": "text-center", "targets": [4, 5, 6, 7, 8] } // Center align permission columns
                    ],
                    "language": {
                        "search": "Search permissions:",
                        "lengthMenu": "Show _MENU_ permissions per page",
                        "info": "Showing _START_ to _END_ of _TOTAL_ permissions",
                        "infoEmpty": "No permissions available",
                        "infoFiltered": "(filtered from _MAX_ total permissions)",
                        "zeroRecords": "No matching permissions found",
                        "emptyTable": "No permissions available"
                    },
                    "dom": '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>' +
                           '<"row"<"col-sm-12"tr>>' +
                           '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                    "drawCallback": function(settings) {
                        // Re-initialize tooltips after table redraw
                        $('[title]').tooltip();
                    }
                });
            }

            // Initialize tooltips
            $('[title]').tooltip();

            // Auto-dismiss alerts after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);
        });

        // Filter functionality
        function filterByPermission(permissionType) {
            var table = $('#permissionsTable').DataTable();

            // Remove active class from all buttons
            $('.btn-group .btn').removeClass('active');

            switch(permissionType) {
                case 'all':
                    table.search('').draw();
                    $('button[onclick="filterByPermission(\'all\')"]').addClass('active');
                    break;
                case 'read':
                    table.columns(4).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'read\')"]').addClass('active');
                    break;
                case 'write':
                    table.columns(5).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'write\')"]').addClass('active');
                    break;
                case 'edit':
                    table.columns(6).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'edit\')"]').addClass('active');
                    break;
                case 'delete':
                    table.columns(7).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'delete\')"]').addClass('active');
                    break;
            }
        }

        // Clear all column filters when switching between permission types
        function clearColumnFilters() {
            var table = $('#permissionsTable').DataTable();
            table.columns().search('').draw();
        }

        // Enhanced filter function that clears other column filters
        function filterByPermission(permissionType) {
            var table = $('#permissionsTable').DataTable();

            // Clear all column filters first
            table.columns().search('');

            // Remove active class from all buttons
            $('.btn-group .btn').removeClass('active');

            switch(permissionType) {
                case 'all':
                    table.search('').draw();
                    $('button[onclick="filterByPermission(\'all\')"]').addClass('active');
                    break;
                case 'read':
                    table.columns(4).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'read\')"]').addClass('active');
                    break;
                case 'write':
                    table.columns(5).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'write\')"]').addClass('active');
                    break;
                case 'edit':
                    table.columns(6).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'edit\')"]').addClass('active');
                    break;
                case 'delete':
                    table.columns(7).search('Yes').draw();
                    $('button[onclick="filterByPermission(\'delete\')"]').addClass('active');
                    break;
            }
        }

              

        // Export functionality (optional)
        function exportToCSV() {
            var table = $('#permissionsTable').DataTable();
            var data = table.buttons.exportData();

            // You can implement CSV export logic here
            console.log('Export functionality can be implemented here');
        }

        // Bulk operations (optional enhancement)
        function toggleSelectAll() {
            var checkboxes = $('input[name="selectedPermissions"]');
            var selectAllCheckbox = $('#selectAll');

            if (selectAllCheckbox.is(':checked')) {
                checkboxes.prop('checked', true);
            } else {
                checkboxes.prop('checked', false);
            }

            updateBulkActionsVisibility();
        }

        function updateBulkActionsVisibility() {
            var selectedCount = $('input[name="selectedPermissions"]:checked').length;
            if (selectedCount > 0) {
                $('#bulkActions').show();
                $('#selectedCount').text(selectedCount);
            } else {
                $('#bulkActions').hide();
            }
        }

        // Print functionality
        function printTable() {
            var printContent = $('#permissionsTable').parent().html();
            var printWindow = window.open('', '_blank');
            printWindow.document.write(`
                <html>
                    <head>
                        <title>User Role Permissions</title>
                        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
                        <style>
                            body { font-size: 12px; }
                            .btn, .btn-group { display: none !important; }
                            .table { font-size: 11px; }
                        </style>
                    </head>
                    <body>
                        <div class="container-fluid">
                            <h2 class="text-center mb-4">User Role Permissions Report</h2>
                            <p class="text-center text-muted">Generated on: ${new Date().toLocaleDateString()}</p>
                            ${printContent}
                        </div>
                    </body>
                </html>
            `);
            printWindow.document.close();
            printWindow.print();
        }
    </script>
}