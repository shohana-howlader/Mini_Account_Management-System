@model Mini_Account_Management_System.Models.ViewModel.CreateUserRolePermissionViewModel

@{
    ViewData["Title"] = "Create User Role Permission";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow">
                <div class="card-header">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-plus-circle"></i> Create New User Role Permission
                    </h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-user"></i> User
                                </label>
                                <select asp-for="UserId" class="form-control" required>
                                    <option value="">Select User</option>
                                    @foreach (var user in ViewBag.Users)
                                    {
                                        <option value="@user.Id">@user.UserName</option>
                                    }
                                </select>
                                <span asp-validation-for="UserId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-user-tag"></i> Role
                                </label>
                                <select asp-for="RoleId" class="form-control" required>
                                    <option value="">Select Role</option>
                                    @foreach (var role in ViewBag.Roles)
                                    {
                                        <option value="@role.Id">@role.RoleName</option>
                                    }
                                </select>
                                <span asp-validation-for="RoleId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-bordered table-striped">
                                <thead class="table-light text-center">
                                    <tr>
                                        <th>SL</th>
                                        <th>Screen Name</th>
                                        <th>
                                            <input type="checkbox" id="selectAllRead" /> Read
                                        </th>
                                        <th>
                                            <input type="checkbox" id="selectAllWrite" /> Write
                                        </th>
                                        <th>
                                            <input type="checkbox" id="selectAllEdit" /> Edit
                                        </th>
                                        <th>
                                            <input type="checkbox" id="selectAllDelete" /> Delete
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Permissions.Count; i++)
                                    {
                                        <tr class="text-center">
                                            <td>@(i + 1)</td>
                                            <td class="text-start">
                                                @Model.Permissions[i].ScreenName
                                                @* Fixed: Added proper hidden fields for model binding *@
                                                <input type="hidden" asp-for="Permissions[@i].ScreenId" />
                                                <input type="hidden" asp-for="Permissions[@i].ScreenName" />
                                            </td>
                                            <td>
                                                <input type="checkbox" asp-for="Permissions[@i].CanRead" class="chkRead" />
                                            </td>
                                            <td>
                                                <input type="checkbox" asp-for="Permissions[@i].CanWrite" class="chkWrite" />
                                            </td>
                                            <td>
                                                <input type="checkbox" asp-for="Permissions[@i].CanEdit" class="chkEdit" />
                                            </td>
                                            <td>
                                                <input type="checkbox" asp-for="Permissions[@i].CanDelete" class="chkDelete" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="form-group text-center mt-4">
                            <button type="submit" class="btn btn-primary btn-lg mr-3">
                                <i class="fas fa-save"></i> Save Permissions
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                                <i class="fas fa-arrow-left"></i> Back to List
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            function bindSelectAll(selectAllId, checkboxClass) {
                // Select All checkbox click
                $(`#${selectAllId}`).on("change", function () {
                    $(`.${checkboxClass}`).prop("checked", this.checked);
                });

                // Child checkbox change: if any unchecked, uncheck select all
                $(document).on("change", `.${checkboxClass}`, function () {
                    const total = $(`.${checkboxClass}`).length;
                    const checked = $(`.${checkboxClass}:checked`).length;
                    $(`#${selectAllId}`).prop("checked", total === checked);
                });
            }

            bindSelectAll("selectAllRead", "chkRead");
            bindSelectAll("selectAllWrite", "chkWrite");
            bindSelectAll("selectAllEdit", "chkEdit");
            bindSelectAll("selectAllDelete", "chkDelete");

            // Debug: Log form data before submission
            $('form').on('submit', function(e) {
                console.log('Form data:');
                $(this).serializeArray().forEach(function(item) {
                    console.log(item.name + ': ' + item.value);
                });
            });
        });
    </script>
}